<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">

	<!-- IOC注解 -->
	<context:component-scan base-package="com.shiyu.service" />
	<!-- 配置连接数据库的驱动，URL，账号和密码 -->
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName"><value>com.mysql.jdbc.Driver</value></property>
		<property name="url">
			<value>jdbc:mysql://192.168.8.8:3306/shiyu?characterEncoding=UTF-8</value>
		</property>
		<property name="username"><value>root</value></property>
		<property name="password"><value></value></property>
	</bean>
	
	<!-- 扫描XML配置文件 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- configLocation：指定Mybatis配置文件位置。如果指定了该属性，
		那么会以该配置文件的内容作为配置信息构建对应的SqlSessionFactoryBuilder，
		但是后续属性指定的内容会覆盖该配置文件里面指定的对应内容。 -->
		<!-- 指定数据源JDBC -->
		<property name="dataSource" ref="dataSource" />
		<!-- 完全限定名修改为类名 -->
		<property name="typeAliasesPackage" value="com.shiyu.pojo" />
		<!-- MapperXML文件位置，跟对应的Mapper接口处于同一位置时可以不用指定该属性的值 -->
		<property name="mapperLocations" value="classpath:com/shiyu/pojo/*.xml" />
	</bean>
	
	<!-- 扫描Mapper接口类,将接口转换为Spring容器中的Bean，在Service中用@Autowired直接注入接口实例 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.shiyu.mapper" />
	</bean>

</beans>